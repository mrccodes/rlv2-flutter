name: rlv2_flutter

concurrency:
  group: $-$
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  semantic-pull-request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  build:
    # defaults:
    #   run:
    #     working-directory: .

    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      # - name: 🤫 Set SSH Key
      #   env:
      #     ssh_key: ${{secrets.ssh_key}}
      #   if: env.ssh_key != null
      #   uses: webfactory/ssh-agent@v0.9.0
      #   with:
      #     ssh-private-key: ${{secrets.ssh_key}}

      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive --ignore=!*

      - name: ⚙️ Run Setup
        run: |
          echo "API_URL=https://dummy-url-for-ci" > .env
          echo "API_KEY=dummy-api-key" >> .env

      - name: ✨ Check Formatting
        run: dart format --line-length 80 --set-exit-if-changed lib test

      - name: 🕵️ Analyze
        run: flutter analyze lib test

      - name: 🧪 Run Tests
        run: very_good test -j 4 --no-optimization --coverage --test-randomize-ordering-seed random

      # - name: 📊 Check Code Coverage
      #   uses: VeryGoodOpenSource/very_good_coverage@v3
      #   with:
      #     path: ./coverage/lcov.info
      #     min_coverage: 0

      - name: Install lcov
        run: sudo apt-get install -y lcov  # Install lcov and genhtml

      - name: Parse Coverage and Generate Badge
        run: |
          if [ ! -f coverage/lcov.info ]; then
            echo "coverage/lcov.info file not found!"
            exit 1
          fi

          genhtml --quiet --output-directory out --branch-coverage --function-coverage coverage/lcov.info
          if [ $? -ne 0 ]; then
            echo "genhtml command failed."
            exit 1
          fi

          echo "Checking genhtml output:"
          genhtml --quiet --output-directory out --branch-coverage --function-coverage coverage/lcov.info

          COVERAGE=$(genhtml --quiet --output-directory out --branch-coverage --function-coverage coverage/lcov.info | grep -Po '(?<=lines......: )\d+')

          echo "Extracted coverage: $COVERAGE"

          if [ -z "$COVERAGE" ]; then
            echo "Failed to extract coverage percentage."
            exit 1
          fi

          echo "Coverage is ${COVERAGE}%"

          curl "https://img.shields.io/badge/coverage-${COVERAGE}%25-brightgreen" -o coverage-badge.svg



      - name: Commit and Push Badge Update
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add coverage_badge.svg
          git commit -m "Update coverage badge"
          git push origin main

  spell-check:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.md
      modified_files_only: false
